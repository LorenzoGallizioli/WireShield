package com.wireshield.av;

import java.io.File;
import com.wireshield.enums.warningClass;

public class ScanReport {

    private Boolean threatDetected;  // Indicates if a threat was detected in the file
    private String threatDetails;    // Details about the detected threat
    private File file;               // The file that was scanned
    private warningClass warningState;  // The classification of the warning (e.g., clear, suspicious, dangerous)
    private Boolean isValid;         // Indicates whether the scan report is valid
    private String scanId;           // The scan ID generated by VirusTotal for the scan
    private String sha256;			 // Aggiungiamo questo campo
    
    // Contatori delle minacce rilevate
    private int maliciousCount;      // Number of malicious detections
    private int harmlessCount;       // Number of harmless detections
    private int suspiciousCount;     // Number of suspicious detections
    private int undetectedCount;     // Number of undetected detections

    // Costruttore di default
    public ScanReport() {
        this.threatDetected = false;
        this.threatDetails = "No threat detected";
        this.warningState = warningClass.CLEAR;
        this.isValid = true;
        this.maliciousCount = 0;
        this.harmlessCount = 0;
        this.suspiciousCount = 0;
        this.undetectedCount = 0;
        this.scanId = "";  // default empty scanId
    }

    // Costruttore con scanId
    public ScanReport(String scanId,File file) {
        this();
        this.scanId = scanId;  // Imposta l'ID della scansione
        this.file = file;
    }

    // Getter e Setter

    public String getSha256() {
        return sha256;
    }

    public void setSha256(String sha256) {
        this.sha256 = sha256;
    }
    
    public String getScanId() {
        return scanId;
    }

    public void setScanId(String scanId) {
        this.scanId = scanId;
    }

    public Boolean isThreatDetected() {
        return warningState == warningClass.DANGEROUS || warningState == warningClass.SUSPICIOUS;
    }

    public void setThreatDetected(Boolean threatDetected) {
        this.threatDetected = threatDetected;
    }

    public String getThreatDetails() {
        return threatDetails;
    }

    public void setThreatDetails(String threatDetails) {
        this.threatDetails = threatDetails;
    }

    public File getFile() {
        return file;
    }

    public void setFile(File file) {
        this.file = file;
    }

    public warningClass getWarningClass() {
        return warningState;
    }

    public void setWarningClass(warningClass warningClass) {
        this.warningState = warningClass;
    }

    public Boolean isValidReport() {
        return isValid;
    }

    public void setValid(Boolean isValid) {
        this.isValid = isValid;
    }

    public int getMaliciousCount() {
        return maliciousCount;
    }

    public void setMaliciousCount(int maliciousCount) {
        this.maliciousCount = maliciousCount;
    }

    public int getHarmlessCount() {
        return harmlessCount;
    }

    public void setHarmlessCount(int harmlessCount) {
        this.harmlessCount = harmlessCount;
    }

    public int getSuspiciousCount() {
        return suspiciousCount;
    }

    public void setSuspiciousCount(int suspiciousCount) {
        this.suspiciousCount = suspiciousCount;
    }

    public int getUndetectedCount() {
        return undetectedCount;
    }

    public void setUndetectedCount(int undetectedCount) {
        this.undetectedCount = undetectedCount;
    }

    public String toString() {
        return "ScanReport {" + 
               "scanId='" + scanId + '\'' +
               ", file=" + (file != null ? file.getName() : "null") + 
               ", threatDetected=" + threatDetected + 
               ", threatDetails='" + threatDetails + '\'' + 
               ", warningClass=" + warningState + 
               ", isValid=" + isValid + 
               ", maliciousCount=" + maliciousCount + 
               ", harmlessCount=" + harmlessCount + 
               ", suspiciousCount=" + suspiciousCount + 
               ", undetectedCount=" + undetectedCount + 
               '}';
    }
}
